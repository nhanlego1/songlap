<?php
/**
 * Created by JetBrains PhpStorm.
 * User: nhan
 * Date: 1/15/15
 * Time: 7:53 AM
 * To change this template use File | Settings | File Templates.
 */

function merc_global_menu()
{
    $items['admin/portal/dashboard'] = array(
        'title' => 'Admin Dashboard',
        'page callback' => 'merc_global_admin_dashboard',
        'access arguments' => array('admin dashboard'),
        'type' => MENU_LOCAL_ACTION,
        'weight' => 1,
    );


    return $items;
}

function merc_global_permission() {
    return array(
        'admin dashboard' => array(
            'title' => t('Administer dashboard'),
            'description' => t('Perform administration tasks for my module.'),
        ),
    );
}


/**
 * Implement hook_block
 */
function merc_global_block_info() {

    $blocks['admin_panel'] = array(
        'info' => t('Admin Panel'),
    );
    $blocks['songlap_year'] = array(
        'info' => t('Year category'),
    );
    $blocks['songlap_subcategory'] = array(
        'info' => t('Sub category'),
    );

    return $blocks;
}

/*
 * Hook Block View
 */
function merc_global_block_view($delta = '') {
    $block = array();

    switch($delta) {
        case 'admin_panel':
            $block['subject'] = '';
            $block['content'] = merc_global_admin_dashboard();
            break;
        case 'songlap_year':
            $block['subject'] = t('Project by year');
            $block['content'] = merc_year_filter();
            break;
        case 'songlap_subcategory':
            $block['subject'] = t('Sub-category');
            $block['content'] = merc_sub_cate();
            break;

    }
    return $block;
}


/*
 * Implement hook_theme
 */

function merc_global_theme() {
    return array(
        'merc_global_panel' => array(
            'render element' => 'element',
            'template' => 'theme/merc-global-panel',
        ),

    );
}

function merc_global_admin_dashboard(){
    global $user;
    drupal_add_css(drupal_get_path('module','merc_global').'/admin_panel/admin-panel.css');
    return array('#theme' => 'merc_global_panel');
}

/*
 *
 */
function merc_year_filter(){
    $tid = arg(2);

    if(check_parent($tid)){
       $tid = arg(2);
    }else{
        $tid = get_parent($tid)->tid;
    }
    $curr_term = taxonomy_term_load($tid);
    $terms = taxonomy_get_tree(4);
    $output = '';
    $output .='<ul class="year-category">';
    foreach($terms as $term){
       if($curr_term->vid==2){
         if($term->tid==$tid){
             $output .='<li><a class="active" href="'.url('taxonomy/term/'.$term->tid,array('query'=>array('cate'=>$tid))).'">'.$term->name.'</a></li>';
         }
         else{
             $output .='<li><a href="'.url('taxonomy/term/'.$term->tid,array('query'=>array('cate'=>$tid))).'">'.$term->name.'</a></li>';
         }

       }elseif(isset($_GET['cate'])){
            if($tid==$term->tid){
                $output .='<li><a class="active" href="'.url('taxonomy/term/'.$term->tid,array('query'=>array('cate'=>$_GET['cate']))).'">'.$term->name.'</a></li>';
            }else{
                $output .='<li><a href="'.url('taxonomy/term/'.$term->tid,array('query'=>array('cate'=>$_GET['cate']))).'">'.$term->name.'</a></li>';
            }

        }else{
           $output .='<li><a href="'.url('taxonomy/term/'.$term->tid).'">'.$term->name.'</a></li>';
       }

    }
    $output .='</ul>';
    return $output;
}

function merc_sub_cate(){
    if(isset($_GET['cate'])){
        $tid = $_GET['cate'];
    }else{
        $tid = arg(2);
    }

    $curr_term = taxonomy_term_load($tid);
    $output = '';
    $output .='<ul class="sub-cate-filter">';
    if(isset($curr_term) && $curr_term->vid==2){
      if(check_parent($curr_term->tid)){
          $output .='<li class="parent"> <a class="active" href="'.url('taxonomy/term/'.$curr_term->tid).'" >'.$curr_term->name.' </a></li>';
          $terms = taxonomy_get_children($curr_term->tid);
          foreach($terms as $t){
              $term = taxonomy_term_load($t->tid);
              $output .='<li><a href="'.url('taxonomy/term/'.$term->tid).'">'.$term->name.'</a></li>';
          }
      }else{
          $parent = get_parent($tid);
          $terms = taxonomy_get_children($parent->tid);
          $output .='<li class="parent"><a href="'.url('taxonomy/term/'.$parent->tid).'">'.$parent->name.'</a></li>';
          foreach($terms as $t){
              $term = taxonomy_term_load($t->tid);
              if($tid==$term->tid){
                  $output .='<li><a class="active" href="'.url('taxonomy/term/'.$term->tid).'">'.$term->name.'</a></li>';
              }else{
                  $output .='<li><a href="'.url('taxonomy/term/'.$term->tid).'">'.$term->name.'</a></li>';
              }

          }

      }


    }
    $output .='</ul>';
    return $output;
}

/**
 * check parent term
 */
function check_parent($tid){
    $query = db_select('taxonomy_term_hierarchy','th');
    $query->fields('th');
    $query->condition('tid',$tid);
    $result = $query->execute()->fetchObject();
    if($result){
        if($result->parent==0){
            return true;
        }else{
            return false;
        }
    }
    return false;
}
/**
 * Get parent
 */
function get_parent($tid){
    $query = db_select('taxonomy_term_hierarchy','th');
    $query->fields('th');
    $query->condition('tid',$tid);
    $result = $query->execute()->fetchObject();
    if($result){
        return taxonomy_term_load($result->parent);
    }
    return false;
}

function merc_global_field_extra_fields() {
    $extra ['node']['product'] = array(
        'display' => array(
            'back_category' => array(
                'label' => t('Back to category'),
                'weight' => 0,
            )
        )
    );

    return $extra;
}

function merc_global_node_view($node, $view_mode, $langcode){
    if($node->type=='product'){
        $cateID = $node->field_category[LANGUAGE_NONE][0]['tid'];
        $parent = get_parent($cateID);
        if(!$parent){
            $parent = taxonomy_term_load($cateID);
        }
        $output = '';
        $output .='<div class="back-to-cate">';
        $output .='<a href="'.url('taxonomy/term/'.$parent->tid).'">'.t('View other projects same category').' <b>'.$parent->name.'</b></a>';
        $output .='</div>';

        $node->content ['back_category'] = array(
            '#markup' => $output,
            '#weight' => 10,
        );
    }


}



